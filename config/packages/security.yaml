security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        database_users:
            entity:
                class: 'App\Entity\User'
                property: 'email'

        memory_users:
            memory:
                users:
                    '%user_dev_mail%':
                        password: '%user_dev_pwd%'
                        roles: 'ROLE_USER'
                    '%admin_dev_mail%':
                        password: '%admin_dev_pwd%'
                        roles: ['ROLE_ADMIN']
        chain_provider:
            chain:
                providers: [ database_users, memory_users ]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: chain_provider
            form_login:
                login_path: app_login
                check_path: app_login
                enable_csrf: true
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
     - { path: ^/member, roles: ROLE_USER }
#     - { path: ^/profile, roles: ROLE_USER }